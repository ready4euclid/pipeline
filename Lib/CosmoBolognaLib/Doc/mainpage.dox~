/**
@mainpage The CosmoBolognaLib documentation

Here you can find the full documentation of the @b CosmoBolognaLib, a
large set of Open Source C++ libraries for cosmological
calculations. Among many other things, these libraries can be used to
measure the two-point and three-point correlation functions, and to
model redshift-space distortions and baryon acoustic oscillations.

Please have a look at the example codes in CosmoBolognaLib/Examples/
that show how to use the CosmoBolognaLib in either @b C++ or @b Python
codes.

If you use the CosmoBolognaLib, please reference the code paper: @b
CosmoBolognaLib: @b C++ @b libraries @b for @b cosmological @b
calculations http://arxiv.org/abs/1511.00012

This is the full list of scientific publications that used the
CosmoBolognaLib: <a href="../../Doc/papers.txt">publications</a>


-----------------------------------------------------------------------------------------------------


Author and BDFL:
  - @b Federico @b Marulli (federico.marulli3@unibo.it)

Main contributors:
  - Michele Moresco (three-point correlation)
  - Alfonso Veropalumbo (two-point angular correlation, jackknife and bootstrap, lognormal mocks, BAO modelling)

Other contributors:
 - Cosimo Fedeli (non-Gaussian cosmologies)
 - Carlo Giocoli (mass accretion history)
 - Mauro Roncarelli (fast comoving distance estimates) 
 - Tommaso Ronconi (voids)


-----------------------------------------------------------------------------------------------------


To @b install the CosmoBolognaLib, please follow the instructions below:

first, make sure that the following external libraries are present in your system:
- GSL (GNU Scientific Library) (v2.1 is required)
- FFTW (Fastest Fourier Transform in the West)
- OpenMP (Open Multiprocessing) 
- Numerical Recipes Third Edition

( please note that some minor changes to the original Numerical
  Recipes header files are required @n to prevent compiling errors due to
  multiple definitions; in case of trouble, please do not hesitate to
  ask me )

then:


--- @b compin @b C++ ---

- download the CosmobolognaLib:

   - either, clone the public GitHub repository of the CosmobolognaLib with:
     - git clone git\@github.com:/federicomarulli/CosmoBolognaLib

   - or, alternatively, download and untar the file:
     - http://apps.difa.unibo.it/files/people/federico.marulli3/CosmoBolognaLib.tar

- enter the folder CosmoBolognaLib/ and type: make
  - by default, make will compile the full set of libraries using the GNU project g++ compiler
  - both the compiler and the compilation flags can be specified by
    modifying the variables C and FLAGS defined in the Makefile @n
    (e.g.: make C=icpc FLAGS="-O0 -g")
  - to compile on MAC OS, the command is: make SYS=MAC
  - if needed, compile the following external softwares used by the CosmoBolognaLib:
    - make CAMB      -> compile CAMB
    - make CLASS     -> compile CLASS
    - make CLASSpy   -> compile the Python wrapper for CLASS
    - make MPTbreeze -> compile MPTbreeze
  - other Makefile options are:
    - make lib*          -> compile the * library (e.g. make libFUNC will compile the library libFUNC.so)
    - make python        -> compile the Python wrappers (SWIG >v3.0 is required)
    - make cleanpy       -> remove useless files created by the Python wrappers
    - make purgepy       -> remove the Python wrappers
    - make allExamples   -> compile all the C++ example codes
    - make cleanExamples -> remove all the object files of the examples
    - make doc           -> create the documentation (Doxygen is required)
    - make clean         -> cleanExamples + remove all the object files of the libraries
    - make purge         -> make clean + remove all the library files (i.e. *.so)
    - make purgeALL      -> make purge + make cleanpy + remove all the files stored for internal calculations


--- @b in @b Python ---

the easiest way to use the CosmoBolognaLib in Python is with pip:

   - sudo pip install CosmoBolognaLib

   or without sudo privileges:
   
   - pip install CosmoBolognaLib --user
   
*/
